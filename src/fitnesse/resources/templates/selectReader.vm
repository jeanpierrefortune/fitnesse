!-<!DOCTYPE html>
<html lang="en">
<head>
 <meta charset="UTF-8">
 <meta name="viewport" content="width=device-width, initial-scale=1.0">
 <style>
  body { font-family: Arial, sans-serif; margin: 20px; }
  .container { max-width: 600px; padding: 20px; border: 1px solid #ccc; border-radius: 8px; }
  h1 { font-size: 24px; margin-bottom: 20px; text-align: center; }
  .form-check { display: flex; align-items: center; margin-bottom: 10px; }
  .form-check input { margin-right: 10px; }
  .form-check-label { white-space: nowrap; text-align: left; }
  .btn { display: inline-block; padding: 10px 20px; font-size: 16px; color: #fff; background-color: #007bff; border: none; border-radius: 4px; cursor: pointer; text-align: center; vertical-align: middle; }
  .btn:hover { background-color: #0056b3; }
  .alert, .success, .error { padding: 15px; color: white; margin-bottom: 20px; border-radius: 4px; display: inline-block; vertical-align: middle; }
  .alert { background-color: #f44336; }
  .success { background-color: #4CAF50; }
  .error { background-color: #f44336; }
  .feedback-container { display: inline-block; margin-left: 20px; vertical-align: middle; }
 </style>
 <title>PC/SC Readers</title>
 <script>
  function selectReader() {
   const selectedReader = document.querySelector('input[name="reader"]:checked');
   if (!selectedReader) {
    alert('Please select a reader.');
    return;
   }
   const readerName = selectedReader.value;
   fetch(`/OpenSAM.SetReader?responder=test&readerName=${encodeURIComponent(readerName)}`)
    .then(response => {
     if (response.ok) {
      return response.text();  // Assuming response is HTML
     } else {
      throw new Error('Network response was not ok');
     }
    })
    .then(html => {
     // Process the HTML response and provide feedback
     showFeedback('success', 'Reader selected successfully!');
     document.getElementById('resultContainer').innerHTML = html; // Optional: Display the HTML response
    })
    .catch(error => {
     console.error('Error:', error);
     showFeedback('error', 'An error occurred while selecting the reader.');
    });
  }
  function showFeedback(type, message) {
   const feedbackContainer = document.getElementById('feedbackContainer');
   feedbackContainer.innerHTML = '';
   const feedbackElement = document.createElement('div');
   feedbackElement.className = type;
   feedbackElement.textContent = message;
   feedbackContainer.appendChild(feedbackElement);
   setTimeout(() => { feedbackContainer.innerHTML = ''; }, 3000); // Hide after 3 seconds
  }
 </script>
</head>
<body>
<div class="container">
 <h1>All Available PC/SC Readers</h1>
 #if($terminals.isEmpty())
  <div class="alert">No card terminals found.</div>
 #else
  <form onsubmit="event.preventDefault(); selectReader();" style="display: flex; align-items: center;">
   #foreach($i in [0..$terminals.size()-1])
    #set($terminal = $terminals.get($i))
    <div class="form-check">
     <input type="radio" id="reader${i}" name="reader" value="${terminal.getName()}">
     <label class="form-check-label" for="reader${i}">${terminal.getName()}</label>
    </div>
   #end
   <button type="submit" class="btn">Select Reader</button>
   <div id="feedbackContainer" class="feedback-container"></div>
  </form>
 #end
 <div id="resultContainer"></div>
</div>
</body>
</html>
-!
